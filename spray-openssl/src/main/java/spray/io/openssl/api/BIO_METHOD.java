package spray.io.openssl.api;

import org.bridj.Callback;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.CLong;
import org.bridj.ann.Field;
import org.bridj.ann.Library;

/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("ssl")
public class BIO_METHOD extends StructObject {
	public BIO_METHOD() {
		super();
	}
	@Field(0)
	public int type() {
		return this.io.getIntField(this, 0);
	}
	@Field(0)
	public BIO_METHOD type(int type) {
		this.io.setIntField(this, 0, type);
		return this;
	}
	/// C type : const char*
	@Field(1)
	public Pointer<Byte > name() {
		return this.io.getPointerField(this, 1);
	}
	/// C type : const char*
	@Field(1)
	public BIO_METHOD name(Pointer<Byte > name) {
		this.io.setPointerField(this, 1, name);
		return this;
	}
	/// C type : bwrite_callback
	@Field(2)
	public Pointer<BIO_METHOD.bwrite_callback > bwrite() {
		return this.io.getPointerField(this, 2);
	}
	/// C type : bwrite_callback
	@Field(2)
	public BIO_METHOD bwrite(Pointer<BIO_METHOD.bwrite_callback > bwrite) {
		this.io.setPointerField(this, 2, bwrite);
		return this;
	}
	/// C type : bread_callback
	@Field(3)
	public Pointer<BIO_METHOD.bread_callback > bread() {
		return this.io.getPointerField(this, 3);
	}
	/// C type : bread_callback
	@Field(3)
	public BIO_METHOD bread(Pointer<BIO_METHOD.bread_callback > bread) {
		this.io.setPointerField(this, 3, bread);
		return this;
	}
	/// C type : bputs_callback
	@Field(4)
	public Pointer<BIO_METHOD.bputs_callback > bputs() {
		return this.io.getPointerField(this, 4);
	}
	/// C type : bputs_callback
	@Field(4)
	public BIO_METHOD bputs(Pointer<BIO_METHOD.bputs_callback > bputs) {
		this.io.setPointerField(this, 4, bputs);
		return this;
	}
	/// C type : bgets_callback
	@Field(5)
	public Pointer<BIO_METHOD.bgets_callback > bgets() {
		return this.io.getPointerField(this, 5);
	}
	/// C type : bgets_callback
	@Field(5)
	public BIO_METHOD bgets(Pointer<BIO_METHOD.bgets_callback > bgets) {
		this.io.setPointerField(this, 5, bgets);
		return this;
	}
	/// C type : ctrl_callback
	@Field(6)
	public Pointer<BIO_METHOD.ctrl_callback > ctrl() {
		return this.io.getPointerField(this, 6);
	}
	/// C type : ctrl_callback
	@Field(6)
	public BIO_METHOD ctrl(Pointer<BIO_METHOD.ctrl_callback > ctrl) {
		this.io.setPointerField(this, 6, ctrl);
		return this;
	}
	/// C type : create_callback
	@Field(7)
	public Pointer<BIO_METHOD.create_callback > create() {
		return this.io.getPointerField(this, 7);
	}
	/// C type : create_callback
	@Field(7)
	public BIO_METHOD create(Pointer<BIO_METHOD.create_callback > create) {
		this.io.setPointerField(this, 7, create);
		return this;
	}
	/// C type : destroy_callback
	@Field(8)
	public Pointer<BIO_METHOD.destroy_callback > destroy() {
		return this.io.getPointerField(this, 8);
	}
	/// C type : destroy_callback
	@Field(8)
	public BIO_METHOD destroy(Pointer<BIO_METHOD.destroy_callback > destroy) {
		this.io.setPointerField(this, 8, destroy);
		return this;
	}
	/// C type : callback_ctrl_callback
	@Field(9)
	public Pointer<BIO_METHOD.callback_ctrl_callback > callback_ctrl() {
		return this.io.getPointerField(this, 9);
	}
	/// C type : callback_ctrl_callback
	@Field(9)
	public BIO_METHOD callback_ctrl(Pointer<BIO_METHOD.callback_ctrl_callback > callback_ctrl) {
		this.io.setPointerField(this, 9, callback_ctrl);
		return this;
	}
	public static abstract class bwrite_callback extends Callback<bwrite_callback > {
		abstract public int apply(/*Pointer<BIO>*/ long BIOPtr1, Pointer<Byte > charPtr1, int int1);
	};
	public static abstract class bread_callback extends Callback<bread_callback > {
		abstract public int apply(/*Pointer<BIO>*/ long BIOPtr1, Pointer<Byte > charPtr1, int int1);
	};
	public static abstract class bputs_callback extends Callback<bputs_callback > {
		abstract public int apply(/*Pointer<BIO>*/ long BIOPtr1, Pointer<Byte > charPtr1);
	};
	public static abstract class bgets_callback extends Callback<bgets_callback > {
		abstract public int apply(/*Pointer<BIO>*/ long BIOPtr1, Pointer<Byte > charPtr1, int int1);
	};
	public static abstract class ctrl_callback extends Callback<ctrl_callback > {
		@CLong
		abstract public long apply(/*Pointer<BIO>*/ long BIOPtr1, int int1, @CLong long l1, Pointer<? > voidPtr1);
	};
	public static abstract class create_callback extends Callback<create_callback > {
		abstract public int apply(/*Pointer<BIO>*/ long BIOPtr1);
	};
	public static abstract class destroy_callback extends Callback<destroy_callback > {
		abstract public int apply(/*Pointer<BIO>*/ long BIOPtr1);
	};
	public static abstract class callback_ctrl_callback extends Callback<callback_ctrl_callback > {
		@CLong
		abstract public long apply(/*Pointer<BIO>*/ long BIOPtr1, int int1, Pointer<Byte/*bio_info_cb*/ > bio_info_cbPtr1);
	};
	public BIO_METHOD(Pointer pointer) {
		super(pointer);
	}
}
