package spray.io.openssl;

import org.bridj.Callback;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.CLong;
import org.bridj.ann.Field;
import org.bridj.ann.Library;

/**
 * <i>native declaration : line 2</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("ssl")
public class bio_st extends StructObject {
	public bio_st() {
		super();
	}
	/// C type : BIO_METHOD*
	@Field(0)
	public Pointer<BIO_METHOD > method() {
		return this.io.getPointerField(this, 0);
	}
	/// C type : BIO_METHOD*
	@Field(0)
	public bio_st method(Pointer<BIO_METHOD > method) {
		this.io.setPointerField(this, 0, method);
		return this;
	}
	/**
	 * bio, mode, argp, argi, argl, ret<br>
	 * C type : callback_callback
	 */
	@Field(1)
	public Pointer<bio_st.callback_callback > callback() {
		return this.io.getPointerField(this, 1);
	}
	/**
	 * bio, mode, argp, argi, argl, ret<br>
	 * C type : callback_callback
	 */
	@Field(1)
	public bio_st callback(Pointer<bio_st.callback_callback > callback) {
		this.io.setPointerField(this, 1, callback);
		return this;
	}
	/**
	 * first argument for the callback<br>
	 * C type : char*
	 */
	@Field(2)
	public Pointer<Byte > cb_arg() {
		return this.io.getPointerField(this, 2);
	}
	/**
	 * first argument for the callback<br>
	 * C type : char*
	 */
	@Field(2)
	public bio_st cb_arg(Pointer<Byte > cb_arg) {
		this.io.setPointerField(this, 2, cb_arg);
		return this;
	}
	@Field(3)
	public int init() {
		return this.io.getIntField(this, 3);
	}
	@Field(3)
	public bio_st init(int init) {
		this.io.setIntField(this, 3, init);
		return this;
	}
	@Field(4)
	public int shutdown() {
		return this.io.getIntField(this, 4);
	}
	@Field(4)
	public bio_st shutdown(int shutdown) {
		this.io.setIntField(this, 4, shutdown);
		return this;
	}
	/// extra storage
	@Field(5)
	public int flags() {
		return this.io.getIntField(this, 5);
	}
	/// extra storage
	@Field(5)
	public bio_st flags(int flags) {
		this.io.setIntField(this, 5, flags);
		return this;
	}
	@Field(6)
	public int retry_reason() {
		return this.io.getIntField(this, 6);
	}
	@Field(6)
	public bio_st retry_reason(int retry_reason) {
		this.io.setIntField(this, 6, retry_reason);
		return this;
	}
	@Field(7)
	public int num() {
		return this.io.getIntField(this, 7);
	}
	@Field(7)
	public bio_st num(int num) {
		this.io.setIntField(this, 7, num);
		return this;
	}
	/// C type : void*
	@Field(8)
	public Pointer<? > ptr() {
		return this.io.getPointerField(this, 8);
	}
	/// C type : void*
	@Field(8)
	public bio_st ptr(Pointer<? > ptr) {
		this.io.setPointerField(this, 8, ptr);
		return this;
	}
	/**
	 * used by filter BIOs<br>
	 * C type : bio_st*
	 */
	@Field(9)
	public Pointer<bio_st > next_bio() {
		return this.io.getPointerField(this, 9);
	}
	/**
	 * used by filter BIOs<br>
	 * C type : bio_st*
	 */
	@Field(9)
	public bio_st next_bio(Pointer<bio_st > next_bio) {
		this.io.setPointerField(this, 9, next_bio);
		return this;
	}
	/**
	 * used by filter BIOs<br>
	 * C type : bio_st*
	 */
	@Field(10)
	public Pointer<bio_st > prev_bio() {
		return this.io.getPointerField(this, 10);
	}
	/**
	 * used by filter BIOs<br>
	 * C type : bio_st*
	 */
	@Field(10)
	public bio_st prev_bio(Pointer<bio_st > prev_bio) {
		this.io.setPointerField(this, 10, prev_bio);
		return this;
	}
	@Field(11)
	public int references() {
		return this.io.getIntField(this, 11);
	}
	@Field(11)
	public bio_st references(int references) {
		this.io.setIntField(this, 11, references);
		return this;
	}
	@CLong
	@Field(12)
	public long num_read() {
		return this.io.getCLongField(this, 12);
	}
	@CLong
	@Field(12)
	public bio_st num_read(long num_read) {
		this.io.setCLongField(this, 12, num_read);
		return this;
	}
	@CLong
	@Field(13)
	public long num_write() {
		return this.io.getCLongField(this, 13);
	}
	@CLong
	@Field(13)
	public bio_st num_write(long num_write) {
		this.io.setCLongField(this, 13, num_write);
		return this;
	}
	public static abstract class callback_callback extends Callback<callback_callback > {
		@CLong
		abstract public long apply(Pointer<bio_st > bio_stPtr1, int int1, Pointer<Byte > charPtr1, int int2, @CLong long l1, @CLong long l2);
	};
	public bio_st(Pointer pointer) {
		super(pointer);
	}
}
